<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.copart.e1.examples.java.spring</groupId>
  <artifactId>RESTful-web-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>RESTful-web-service</name>
  <url>http://maven.apache.org</url>
 
<!-- What is a starter POM or starter dependency? -->
<!-- They do not contain libraries but rather starter POMs are a set of -->
<!-- convenient dependency descriptors that you can include in your application. -->
<!-- You get a one-stop-shop for all the Spring and related technology that you  -->
<!-- need, without having to hunt through sample code and copy paste loads  -->
<!-- of dependency descriptors. -->

 	<parent>
<!--  	Maven users can inherit from the spring-boot-starter-parent project  -->
<!--  	to obtain sensible defaults such as additional dependency management,  -->
<!--  	resource filtering  and plugin configuration -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>
	
<!-- 	Dependency Desciptors -->
	<dependencies>
<!-- 		Starter for building web, including RESTful, applications using Spring MVC.  -->
<!-- 		Uses Tomcat as the default embedded container -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
<!-- 			The spring-boot-maven-plugin plugin allows on to create executable jar -->
<!-- 			and war files. A key feature of a microservice -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
<!-- 			The maven compiler used to compile the source code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
<!-- 					Explicitly define the JRE that is to be used -->
					<source>1.8</source>
					<target>1.8</target>
					<archive>
<!-- 						Adds a manifest file to the final build -->
						<manifestEntries>
							<Build-Number>${buildNumber}</Build-Number>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>			
		</plugins>
	</build>
</project>
